# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.1.2
  
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  aws-example:
   docker:
     - image: cimg/aws:2022.06
   steps:
     - checkout
     # run the aws-cli/setup command from the orb
     - aws-cli/setup:
         profile_name: "OIDC-PROFILE"
         role_arn: 'arn:aws:iam::336605340992:role/s3-web-identity-gke-staging'
         role_session_name: AWSCLI-Session
     - run:
         name: Log-into-AWS-ECR
         command: |
           env > /tmp/env1
           aws sts assume-role --role-arn "arn:aws:iam::336605340992:role/s3-web-identity-gke-staging" --role-session-name AWSCLI-Session --profile "OIDC-PROFILE"
           aws s3 ls s3://test-destination-bucket1 --profile "OIDC-PROFILE"
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  OIDC-with-AWS:
   jobs:
     - aws-example:
         # must use a valid CircleCI context
         context: aws
